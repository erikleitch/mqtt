%%-*- mode: erlang -*-
%% NOTE: When adding a new header dependency in the c_src directory,
%% make sure you run `make clean` and then `make` in order to ensure
%% rebar picks up your new header dependency.

{eunit_opts, [verbose]}.
{so_name, "libmqtt.so"}.

{xref_checks, [undefined_function_calls]}.

{port_sources, ["c_src/srcs/[A-Z]*.cc"]}.

{erl_opts, [warnings_as_errors, {parse_transform, lager_transform}, debug_info]}.

{deps, [
        {lager, ".*", {git, "git://github.com/basho/lager.git", {tag, "2.2.0"}}}
       ]}.

{port_env, [
	    {"CFLAGS",   "$CFLAGS   -Wall -O3 -fPIC -DWITH_ERL=1 -DWITH_LEVELDB=\"${MQTT_USE_LEVELDB:-0}\""},
	    {"CXXFLAGS", "$CXXFLAGS -Wall -O3 -fPIC -DWITH_ERL=1 -DWITH_LEVELDB=\"${MQTT_USE_LEVELDB:-0}\""},

	    {"DRV_CFLAGS",  "$DRV_CFLAGS -O3 -Wall -I$MQTT_INC_DIR"},
	    {"DRV_LDFLAGS", "$DRV_LDFLAGS -v -lstdc++ -L$MQTT_LIB_DIR -lmosquitto"},

	    {"DRV_CFLAGS",  "$DRV_CFLAGS -Ic_src/leveldb/include"},
	    {"DRV_LDFLAGS", "$DRV_LDFLAGS -v `if [ ${MQTT_USE_LEVELDB:-0} == 1 ]; then echo 'c_src/leveldb/libleveldb.a'; fi`"},
	    {"DRV_LDFLAGS", "$DRV_LDFLAGS -v `if [ ${MQTT_USE_LEVELDB:-0} == 1 ]; then echo 'c_src/system/lib/libsnappy.a'; fi`"}
	   ]}.

{pre_hooks, [{'get-deps', "c_src/build_deps.sh get-deps"},
             {compile, "c_src/build_deps.sh"},
             {test,    "c_src/build_deps.sh"}]}.

{post_hooks, [{clean, "c_src/build_deps.sh clean"}]}.
